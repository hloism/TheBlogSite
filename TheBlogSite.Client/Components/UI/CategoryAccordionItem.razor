@if (Category is not null)
{
	<div class="accordion-item">
		<div class="accordion-header">
			@if (status == Status.Viewing)
			{
				<div class="row g-0 border-0 mb-4">
					<img class="rounded col-sm-3 bg-repeat-0 bg-size-cover bg-position-center rounded-3" src="@(Category.ImageUrl ?? ImageHelper.DefaultBlogImage)" width="285" height="90" alt="Post image">
					<div class="col-sm-7">
 						<div class="pt-4 pb-sm-4 ps-sm-4 pe-lg-4" role="button" data-bs-toggle="collapse" data-bs-target="#collapse-@Category.Id">
							<h3>
								@Category.Name
							</h3>

							<div class="d-flex flex-wrap align-items-center mt-n2">
								<span class="fs-sm text-body-secondary mt-2">
									<a class="btn btn-primary" href="category/posts/@Category.Id" role="button" @onclick="() => status = Status.Viewing ">
										<i class="bi bi-eye-fill" aria-label="View Category">Browse Posts</i>
									</a>
								</span>
								<span class="p-2 fs-sm text-body-secondary mt-2">
									<a class="btn btn-primary outline" role="button" @onclick="() => status = Status.Editing">
										<i class="bi bi-pencil-fill" aria-label="Edit Category">Edit Category</i>
									</a>
								</span>
								<span class="fs-sm text-body-secondary mt-2">
									<a class="btn btn-danger outline" role="button" @onclick="() => status = Status.Deleting">
										<i class="bi bi-trash-fill" aria-label="Delete Category">Delete Category</i>
									</a>
								</span>
							</div>
						</div>
					</div> 
				</div>
			}
			else if (status == Status.Deleting)
			{
				<div class="d-md-flex gap-3 p-3">
					<div class="flex-grow-1 gap-2 hstack align-items-center" role="button" data-bs-toggle="collapse" data-bs-target="#collapse-@Category.Id">
						@Category.Name
					</div>
					<div>
						<i class="bi bi-exclamation-triangle text-danger"></i>
						Are you sure you want to delete this category?
					</div>
					<div class="hstack gap-2 mt-2">
						<button class="btn btn-danger btn-small" @onclick="HandleDelete">
							<i class="bi bi-trash-fill" aria-label="Delete Category"></i>Delete
						</button>
						<button class="btn btn-outline-secondary btn-small" @onclick="() => status = Status.Viewing">
							<i class="bi bi-x text-danger" aria-label="Cancel Delete"></i>Cancel
						</button>
					</div>
				</div>
			}
			else if (status == Status.Editing)
			{
				<EditForm Model="Category" class="d-md-flex gap-3 p-3 align-items-center" OnValidSubmit="HandleUpdate">
					<DataAnnotationsValidator />
					<div class="flex-grow-1 hstack gap-2 align-items-center" role="button">
						<span class="badge bg-secondary rounded-pill small" data-bs-toggle="collapse" data-bs-target="#collapse-@Category.Id">
							@Category.Posts.Count
						</span>
						<div class="vstack gap-2">

							<InputFile @bind-Value="Category.ImageUrl" class="form-control" />
							<ValidationMessage For="() => Category.ImageUrl" />
						</div>
						<div class="vstack gap-2">
							<InputText @bind-Value="Category.Name" class="form-control" />
							<ValidationMessage For="() => Category.Name" />
						</div>
					</div>
					<div class="mt-2 mt-md-0">
						<span class="text-nowrap">
							<button type="submit" class="btn btn-primary btn-sm me-1">
								<i class="bi bi-floppy"></i>
								Save Changes
							</button>
							<button type="button" class="btn btn-sm btn-danger" @onclick="CancelEdit">
								<i class="bi bi-x"></i>
								Cancel
							</button>
						</span>
					</div>
				</EditForm>
			}
		</div>
	</div>

}
@code {
	[Parameter, EditorRequired]
	public string? AccordionId { get; set; }

	[Parameter, EditorRequired]
	public CategoryDTO? Category { get; set; }

	[Parameter, EditorRequired]
	public EventCallback<int> OnDelete { get; set; }

	[Parameter, EditorRequired]
	public EventCallback<CategoryDTO> OnUpdate { get; set; }

	private enum Status
	{
		Viewing,
		Editing,
		Deleting,
	}

	private Status status = Status.Viewing;
	private string? originalName;

	//Add OnParameter Set
	protected override void OnParametersSet()
	{
		if (Category != null)
		{
			originalName = Category.Name;
		}
	}

	private void CancelEdit()
	{
		if (!string.IsNullOrEmpty(originalName))
		{
			Category!.Name = originalName;
		}

		status = Status.Viewing;
	}


	private async Task HandleDelete()
	{
		await OnDelete.InvokeAsync(Category!.Id);
		status = Status.Viewing;
	}

	private async Task HandleUpdate()
	{
		await OnUpdate.InvokeAsync(Category);
		status = Status.Viewing;


	}
}









	@* 				<div class="col-md-12">
					<img class="rounded" src="@(Category.ImageUrl ?? ImageHelper.DefaultBlogImage)" alt="Post image" />
				</div>
				<div class="col-md-12 p-3 vstack gap-2 flex-grow-1 gap-2 hstack align-items-center" role="button" data-bs-toggle="collapse" data-bs-target="#collapse-@Category.Id">
					@Category.Name
					<a class="btn btn-primary" href="/posts/@Category.Id" role="button" @onclick="() => status = Status.Viewing ">
						<i class="bi bi-eye-fill" aria-label="View Category">Browse Posts</i>
					</a>
					<div class=" col p-3 h-stack gap-2 justify-content-center">
						<a class="btn btn-primary outline" role="button" @onclick="() => status = Status.Editing">
							<i class="bi bi-pencil-fill" aria-label="Edit Category">Edit Category</i>
						</a>
					</div>
					<div class=" col h-stack gap-2 justify-content-center">
						<a class="btn btn-danger outline" role="button" @onclick="() => status = Status.Deleting">
							<i class="bi bi-trash-fill" aria-label="Delete Category">Delete Category</i>
						</a>
					</div>
				</div> *@