@if (Comment is not null)
{
	<div class="card border-0 bg-secondary pt-2 p-md-2 p-xl-3 p-xxl-4 mt-3 mt-md-0">
		<div class="card-body">
			<EditForm Model="Comment" class="row needs-validation g-4" OnValidSubmit="HandleSubmit">
				<DataAnnotationsValidator/>
				<div class="col-12">
					<InputTextArea @bind-Value="Comment.Content" class="form-control" rows="4" placeholder="Type your comment here..."></InputTextArea>
				<ValidationMessage For="() => Comment.Content" /> 
				</div>

				<button class="btn btn-primary" type="submit">Save</button>

			</EditForm>
		</div>
	</div>	


}

@code {
	[Parameter]
	public CommentDTO? Comment { get; set; }

	[Parameter, EditorRequired]
	public EventCallback<CommentDTO> OnSubmit { get; set; }

	[Parameter]
	public EventCallback OnCancel { get; set; }



	protected override void OnParametersSet()
	{
		Comment = new();
	}

	private async Task HandleSubmit()
	{
		await OnSubmit.InvokeAsync(Comment);	
	}


}
